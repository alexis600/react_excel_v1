[{"C:\\Users\\user\\Documents\\react_excel_v1\\src\\index.js":"1","C:\\Users\\user\\Documents\\react_excel_v1\\src\\App.js":"2","C:\\Users\\user\\Documents\\react_excel_v1\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Documents\\react_excel_v1\\src\\Frame.js":"4","C:\\Users\\user\\Documents\\react_excel_v1\\src\\Alertabla.js":"5","C:\\Users\\user\\Documents\\react_excel_v1\\src\\Consultas.js":"6","C:\\Users\\user\\Documents\\react_excel_v1\\src\\RegistroAlarma.js":"7","C:\\Users\\user\\Documents\\react_excel_v1\\src\\testabla.js":"8"},{"size":504,"mtime":1611958906743,"results":"9","hashOfConfig":"10"},{"size":1320,"mtime":1612920418790,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":7865,"mtime":1612846801048,"results":"13","hashOfConfig":"10"},{"size":1551,"mtime":1612847492496,"results":"14","hashOfConfig":"10"},{"size":2261,"mtime":1612658719023,"results":"15","hashOfConfig":"10"},{"size":579,"mtime":1612558397825,"results":"16","hashOfConfig":"10"},{"size":2719,"mtime":1612916902336,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"zv9imo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\user\\Documents\\react_excel_v1\\src\\index.js",[],["41","42"],"C:\\Users\\user\\Documents\\react_excel_v1\\src\\App.js",["43","44","45","46","47","48","49"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport Frame from './Frame';\n\nimport login from './login.json'\n\nimport Alertabla from './Alertabla'\n\nimport testabla from './testabla'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nconst axios = require('axios');\n\n\n\nclass App extends React.Component {\n  \n  /*\n  conectarse = ()=> {\n    var usuario = \"api\";\n    var contraseña = \"zabbix\";\n  \n  \n    \n    let axiosConfig = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    \n    var info = {\n      \"jsonrpc\": \"2.0\",\n      \"method\": \"asdt\",\n      \"params\": {\n          \"user\": \"Admin\",\n          \"password\": \"zabbix\"\n      },\n      \"id\": 1\n    }\n  \n    axios.post(\"http://192.168.177.150/zabbix/api_jsonrpc.php\", login, axiosConfig)\n    .then((res) => {\n      console.log(\"RESPONSE RECEIVED: \", res.data.result);\n\n    })\n    .catch((err) => {\n      console.log(\"AXIOS ERROR: \", err);\n    })\n    \n  }*/\n  \n  \n  render(){\n      return (\n        <div className=\"App\">\n          <h1> Hello World</h1>\n          \n          <Frame />\n\n          <Alertabla className=\"tablaAlar\"/>\n\n          <testabla />\n          \n        </div>\n      )\n      }\n        \n      \n  \n}\n\nexport default App;\n","C:\\Users\\user\\Documents\\react_excel_v1\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\react_excel_v1\\src\\Frame.js",["50","51","52"],"import React, {Component} from 'react';\r\n\r\nimport loginjson from './login.json'\r\n\r\nimport Consultas from './Consultas.js';\r\nimport Alertabla from './Alertabla';\r\n\r\nimport App from './App'\r\nimport RegistroAlarma from './RegistroAlarma';\r\n\r\nconst axios = require('axios');\r\nconst  moment = require('moment');\r\n\r\nexport default class Frame extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            login: true,\r\n            axiosConfig: { headers: {\"Content-Type\": \"application/json\"}},\r\n            token: \"\"\r\n            \r\n        }\r\n    }\r\n\r\n    changeState = () => {\r\n        \r\n        this.setState({            \r\n          login: !this.state.login        \r\n        })        \r\n        this.loguear();\r\n    } \r\n\r\n    async loguear () {\r\n        var Consulta = new Consultas();\r\n        if (this.state.login) { \r\n                await axios.post(\"http://192.168.177.150/zabbix/api_jsonrpc.php\", \r\n                loginjson, this.state.axiosConfig)\r\n                \r\n                .then(async(res) => {\r\n                    console.log(\"LOGIN RECEIVED: \", res.data.result); \r\n                    var tok = res.data.result;\r\n                                    \r\n                    this.setState ({token : tok});\r\n                                        \r\n                    var fila = await this.loadTable();\r\n                    console.log(\"a ver si aca\", {fila});\r\n                    //debugger\r\n                    \r\n                })\r\n            .catch ((err) => {\r\n                console.log(\"AXIOS ERROR LOGIN: \", err);\r\n                })\r\n            \r\n        }\r\n        else {\r\n            try {\r\n                const logoutJson = Consulta.logout(this.state.token);\r\n                var res = await axios.post(\"http://192.168.177.150/zabbix/api_jsonrpc.php\", \r\n                logoutJson, this.state.axiosConfig)\r\n            //.then(res => {\r\n                console.log(\"LOGOUT RECEIVED: \", res.data)\r\n            } \r\n            catch (error) {\r\n                console.log(\"AXIOS ERROR LOGOUT: \", error);\r\n            }/*\r\n            const logoutJson = Consulta.logout(this.state.token);\r\n            var res = await axios.post(\"http://192.168.177.150/zabbix/api_jsonrpc.php\", \r\n            logoutJson, this.state.axiosConfig)\r\n            //.then(res => {\r\n                console.log(\"LOGOUT RECEIVED: \", res.data)\r\n            //})\r\n            .catch((err) => {\r\n                console.log(\"AXIOS ERROR LOGOUT: \", err);\r\n            })*/\r\n        }\r\n    }\r\n    // pruebo meter parametro la fila asi no la declaro 2 veces\r\n    async loadTable(){\r\n        const tabla = new Alertabla();\r\n        var fila = new RegistroAlarma();\r\n        if (!this.state.login) { // VER ESTO XQ EL BOTON GET ALARMA DA EXCEPCION PERO LLAMARLO DESDE LOGUEAR NO\r\n            var Consulta = new Consultas();\r\n            const problemas = Consulta.getProblemas(this.state.token);                                            \r\n            fila = await this.problemsBD(problemas, Consulta);\r\n            //debugger;\r\n            tabla.setState({json:fila});\r\n            return fila;\r\n        }\r\n        \r\n    }\r\n    \r\n    async problemsBD (problemas, Consulta)  { \r\n        \r\n        const postProblems = await axios.post(\"http://192.168.177.150/zabbix/api_jsonrpc.php\", \r\n            problemas, this.state.axiosConfig);\r\n                \r\n        return await this.metodoProblems(postProblems, Consulta);\r\n                \r\n    }\r\n\r\n    async metodoProblems(postProblems, Consulta) {\r\n        \r\n        var that = this // closure ambito for each es diferente al ambito \r\n        \r\n        var fila = new RegistroAlarma();\r\n        console.log(\"GET PROBLEMAS RECEIVED: \", postProblems.data);                    \r\n        var alarmas = postProblems.data.result;\r\n        for (var i = 0; i < alarmas.length; i++) {    \r\n            var alarma = alarmas[i];\r\n            switch(alarma.severity) {\r\n                case \"0\": \r\n                    alarma.severity = \"Not classified\";\r\n                    break;\r\n                case \"1\":                                 \r\n                    alarma.severity = \"Information\";\r\n                    break;\r\n                case \"2\": \r\n                    alarma.severity = \"Warning\";\r\n                    break;\r\n                case \"3\": \r\n                    alarma.severity = \"Average\";\r\n                    break;\r\n                case \"4\":                                 \r\n                    alarma.severity = \"High\";\r\n                    break;\r\n                case \"5\":                                 \r\n                    alarma.severity = \"Disaster\";\r\n                    break;\r\n                default:\r\n                    alarma.severity = \"Defectooooooooooo\";\r\n            }\r\n            fila.setState(\"Severity\", alarma.severity);\r\n\r\n            var eventid = alarma.eventid;\r\n            \r\n            var hora  = new Date(alarma.clock * 1000);\r\n            var horaZbx = moment(hora).format(\"YYYY-MM-DD hh:mm:ss\");\r\n            fila.setState(\"Time\", horaZbx);\r\n            \r\n\r\n            // Para calcular tiempo de duración\r\n            //var ya = Date.now();\r\n            //console.log(new Date(ya * 1000).getTime());\r\n            var now = moment(new Date());\r\n\r\n            //var inicio = hora.getTime();\r\n            //var diffEnMilisegundos = ya - inicio;\r\n            //var segundos = diffEnMilisegundos/(1000);\r\n            var now = moment(new Date());\r\n            //var date = moment(new Date(hora));\r\n            //Mon Feb 08 2021 23:49:37 GMT-0300\r\n            //console.log(moment(hora).format(\"hh:mm:ss\"));\r\n            //console.log(moment(hora, \"mm\", true).toNow());\r\n            var duracion = now.from(hora, true)\r\n            //console.log(moment().startOf(hora).fromNow())\r\n            //MMMM Do YYYY, h:mm:ss a\r\n            //console.log(moment.duration(now.diff(hora)))\r\n\r\n\r\n            fila.setState(\"Duration\", duracion);\r\n            debugger;\r\n            \r\n            fila.setState(\"Problem\", alarma.name);\r\n            (alarma.acknowledged)? fila.setState(\"Ack\", \"Yes\"): fila.setState(\"Ack\", \"No\");\r\n                        \r\n            const eventos = Consulta.getEventos(this.state.token, eventid);                        \r\n            var idobj = await that.eventosBD(eventos);\r\n            \r\n            const triggers = Consulta.getTriggers(this.state.token, idobj);\r\n            var host = await that.triggersBD(triggers);\r\n                    \r\n            fila.setState(\"Host\", host)\r\n                                     \r\n        }\r\n            \r\n         \r\n        debugger;\r\n        return fila;  \r\n    }\r\n\r\n    async eventosBD (eventos){                \r\n        const postEvents = await axios.post(\"http://192.168.177.150/zabbix/api_jsonrpc.php\",\r\n            eventos, this.state.axiosConfig)\r\n            \r\n        return postEvents.data.result[0].objectid;\r\n           \r\n    }\r\n    async triggersBD (objetos) {\r\n        const postTriggers = await axios.post(\"http://192.168.177.150/zabbix/api_jsonrpc.php\",\r\n            objetos, this.state.axiosConfig)\r\n        \r\n            return postTriggers.data.result[0].hosts[0].host;\r\n\r\n    }\r\n\r\n    // ver xq el boton getalarmas onclick da excepcion en this.loadtable\r\n    render() {\r\n        const { login } = this.state;\r\n        return (\r\n          <div className=\"App-body\">\r\n            <button\r\n              type=\"button\"\r\n              className={login ? \"btn-primary\" : \"btn-danger\"}\r\n              onClick={this.changeState} >\r\n              {login ? \" Login\" : \" Log Out\"}\r\n            </button>\r\n           \r\n            <button id=\"buttonGet\" \r\n            type=\"button\" disabled={this.state.login}\r\n            onClick={this.loadTable} >\r\n                Get alarms\r\n            \r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n}","C:\\Users\\user\\Documents\\react_excel_v1\\src\\Alertabla.js",["53","54"],"import axios from 'axios';\r\nimport React, {Component} from 'react';\r\n\r\nclass Alertabla extends React.Component {\r\n    \r\n    /*constructor() {\r\n        super();\r\n    }*/\r\n    state = {\r\n        json: [\r\n            {/*\r\n                A: \"axios\",\r\n                B : \"babel\",\r\n                C: \"console\"*/\r\n            }\r\n        ]\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <table className=\"tablaAlarmas\">\r\n                    <thead>\r\n                        <th></th>\r\n                        <th>Severity</th>\r\n                        <th>Time</th>\r\n                        <th>RecoveryTime</th>\r\n                        <th>Status</th>\r\n                        <th>Host</th>\r\n                        <th>Problem</th>\r\n                        <th>Duration</th>\r\n                        <th>Ack</th>\r\n                        <th>Actions</th>\r\n                        <th>Tags</th>\r\n                    </thead>\r\n\r\n                    <tbody >\r\n                        {this.state.json.map((data, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{data.Severity}</td>\r\n                                    <td>{data.Time}</td>\r\n                                    <td>{data.RecoveryTime}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Alertabla;","C:\\Users\\user\\Documents\\react_excel_v1\\src\\Consultas.js",["55","56","57","58","59"],"import React, {Component} from 'react';\r\n\r\nimport Frame from './Frame.js';\r\n\r\n// ver esto require Server from 'json-server';\r\nconst axios = require('axios');\r\nclass Consultas {\r\n\r\n    logout(token) {\r\n        const salirStr = {\r\n            \"jsonrpc\": \"2.0\",\r\n            \"method\": \"user.logout\",\r\n            \"params\": {\r\n            },\r\n            \"id\": 1,\r\n            \"auth\": token\r\n        }\r\n        const salirJsn = JSON.stringify(salirStr);\r\n                \r\n        return salirStr;\r\n    }\r\n\r\n    getProblemas(token) {\r\n        \r\n        const state = {\r\n            consulToken: token,\r\n            problemStr: {\r\n                \"jsonrpc\": \"2.0\",\r\n                \"method\": \"problem.get\",\r\n                \"params\": {\r\n                    \"output\": [\"eventid\", \"severity\", \"clock\", \"name\", \"acknowledged\"]\r\n                },            \r\n                \"auth\": token,\r\n                \"id\": 1\r\n            }    \r\n        }\r\n        \r\n        var problemJsn = JSON.stringify(state.problemStr);        \r\n        \r\n        return problemJsn;\r\n    }\r\n    getEventos(token, evento) {\r\n        const state = {\r\n            consulToken: token,\r\n            eventoStr:{\r\n                \"jsonrpc\": \"2.0\",\r\n                \"method\": \"event.get\",\r\n                \"params\": {\r\n                    \"filter\": {\"eventid\" : evento},\r\n                    \"output\":[\"eventid\", \"objectid\"]\r\n                },             \r\n                \"auth\": token,\r\n                \"id\": 1\r\n            }\r\n        }\r\n        //debugger;\r\n        return state.eventoStr;\r\n    }\r\n    \r\n    getTriggers(token, triggerids) {\r\n        const state = {\r\n            consulToken: token,\r\n            triggerStr: {\r\n                \"jsonrpc\": \"2.0\",\r\n                \"method\": \"trigger.get\",\r\n                \"params\": {\r\n                    \"triggerids\" : triggerids,\r\n                    \"output\":[\"triggerid\",\"correlation_tag\"],\r\n                    \"selectFunctions\": \"extend\",\r\n                    \"selectHosts\": {\"output\": \"host\"}            \r\n                },                \r\n                \"auth\": token,\r\n                \"id\": 1                \r\n            }\r\n        }\r\n        //debugger;\r\n        return state.triggerStr;\r\n    }       \r\n}\r\nexport default Consultas;","C:\\Users\\user\\Documents\\react_excel_v1\\src\\RegistroAlarma.js",["60","61"],"import React, {Component} from 'react';\r\n\r\n//90 Frame\r\nexport default class RegistroAlarma {\r\n    \r\n    constructor() {\r\n            this.state= {\r\n            Severity:\"\",\r\n            Time:\"\",\r\n            RecoveryTime:\"\",\r\n            Status:\"PROBLEM\",\r\n            Host:\"\",\r\n            Problem:\"\",\r\n            Duration:\"\",\r\n            Ack:\"\",\r\n            Actions:\"\",\r\n            Tags:\"\"\r\n        }\r\n    }\r\n\r\n    setState(key, value) {\r\n        this.state[key]= value;\r\n        debugger;\r\n\r\n    }\r\n    /*render() {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }*/\r\n}",["62","63"],"C:\\Users\\user\\Documents\\react_excel_v1\\src\\testabla.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"72","line":3,"column":16,"nodeType":"70","messageId":"71","endLine":3,"endColumn":25},{"ruleId":"68","severity":1,"message":"73","line":4,"column":26,"nodeType":"70","messageId":"71","endLine":4,"endColumn":32},{"ruleId":"68","severity":1,"message":"74","line":4,"column":34,"nodeType":"70","messageId":"71","endLine":4,"endColumn":39},{"ruleId":"68","severity":1,"message":"75","line":4,"column":41,"nodeType":"70","messageId":"71","endLine":4,"endColumn":45},{"ruleId":"68","severity":1,"message":"76","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":13},{"ruleId":"68","severity":1,"message":"77","line":13,"column":7,"nodeType":"70","messageId":"71","endLine":13,"endColumn":12},{"ruleId":"68","severity":1,"message":"72","line":1,"column":16,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"78","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":11},{"ruleId":"79","severity":1,"message":"80","line":150,"column":17,"nodeType":"70","messageId":"81","endLine":150,"endColumn":20},{"ruleId":"68","severity":1,"message":"82","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":2,"column":16,"nodeType":"70","messageId":"71","endLine":2,"endColumn":25},{"ruleId":"68","severity":1,"message":"83","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":1,"column":16,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"84","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":13},{"ruleId":"68","severity":1,"message":"77","line":6,"column":7,"nodeType":"70","messageId":"71","endLine":6,"endColumn":12},{"ruleId":"68","severity":1,"message":"85","line":18,"column":15,"nodeType":"70","messageId":"71","endLine":18,"endColumn":23},{"ruleId":"68","severity":1,"message":"83","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":1,"column":16,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"64","replacedBy":"86"},{"ruleId":"66","replacedBy":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'login' is defined but never used.","'axios' is assigned a value but never used.","'App' is defined but never used.","no-redeclare","'now' is already defined.","redeclared","'axios' is defined but never used.","'React' is defined but never used.","'Frame' is defined but never used.","'salirJsn' is assigned a value but never used.",["88"],["89"],"no-global-assign","no-unsafe-negation"]